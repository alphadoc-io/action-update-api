name: Alphadoc API upload
description: Upload and Publish OpenAPI specs in alphadoc

inputs:
  OPENAPI_FILE:
    description: "Relative path to the OpenAPI file from the root of your repo"
    required: true
  ORGANIZATION:
    description: "Alphadoc organization name, subdomain of your url."
    required: true
  PROJECT_VERSION_ID:
    description: "Alphadoc Project Version ID"
    required: true
  API_SPEC_ID:
    description: "Alphadoc API Specification ID"
    required: true
  API_KEY:
    description: "API Key to authenticate the request"
    required: true
  HOSTNAME:
    description: "Hostname minus the organization subdomain"
    default: alphadoc.io

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Convert JSON to base64
      shell: bash
      run: |
        base64_file=$(base64 -w 0 ${{ inputs.OPENAPI_FILE }})
        echo "base64=$base64_file" >> $GITHUB_ENV

    - name: Upload OpenAPI and get versionId
      shell: bash
      run: |
        version_response=$(curl -f -s -X POST \
          -H "X-API-KEY: ${{ inputs.API_KEY }}" \
          -H "Content-Type: application/json" \
          -d '{
            "apiSpec": "${{ env.base64 }}",
            "apiSpecType": "application/json"
          }' \
          "https://${{ inputs.ORGANIZATION }}.${{ inputs.HOSTNAME }}/v1/projectVersions/${{ inputs.PROJECT_VERSION_ID }}/apiSpecs/${{ inputs.API_SPEC_ID }}/versions")
        version_id=$(echo "$version_response" | jq -r '.id')
        echo "versionId=$version_id" >> $GITHUB_ENV

    - name: Set API specification as default
      shell: bash
      run: |
        curl -f -s -X PUT \
          -H "X-API-KEY: ${{ inputs.API_KEY }}" \
          "https://${{ inputs.ORGANIZATION }}.${{ inputs.HOSTNAME }}/v1/projectVersions/${{ inputs.PROJECT_VERSION_ID }}/apiSpecs/${{ inputs.API_SPEC_ID }}/versions/${{ env.versionId }}"

    - name: Publish Project Version
      shell: bash
      run: |
        curl -f -s -X POST \
          -H "X-API-KEY: ${{ inputs.API_KEY }}" \
           -d '{}' \
          "https://${{ inputs.ORGANIZATION }}.${{ inputs.HOSTNAME }}/v1/projectVersions/${{ inputs.PROJECT_VERSION_ID }}/publish"
